<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwg
        JC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCACfAL0DASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD3+iiigAoopM0AB6UmRVLUdTttMtjNctgdAo5LH2FcnP4zubgE
        W0EcCZxmQ72P4Dj+dbUqE6msUc9bFUqPxvU7k1m3es6fZuY5rqMS/wDPNfmf/vkc1w1xqdzd8XF1M6/3
        N5VfyGKijnSJdkaqi9wowCfeuqOAl9pnBPM0/gX3nWy+JSwxaWbsP787+WPyGT+gqnJqN/cDEt35YP8A
        Dbpt/U5P8qwvtXNO+18VssJCOyOeWNlPdmrsgY5kVpT6zSM/6E4p4isx0tIB7iMVki696cLv3qvY2IVa
        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
        Qa7OkAApa4py5pOXc3irKx//2Q==
</value>
  </data>
</root>